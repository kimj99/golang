package middleware

import (
	"fmt"
	"time"

	"github.com/dgrijalva/jwt-go"
)

var userCtxKey = &contextKey{"user"}

type contextKey struct {
	name string
}

type UserAuth struct {
	Authenticated bool
}

func JWTMiddleWare(next func(w http.ResponseWriter, r *http.Request)) http.Handler {
	return http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {
		token, err := GetTokenFromRequest(r)
		ctx := context.WithValue(r.Context(), userCtxKey, *UserAuth)
		r = r.WithContext(ctx)
		next.ServeHttp(w, r)
	})
}

func GetTokenFromRequest(r *http.Request) string, error {
	reqToken := r.Header.Get("Authorization")
	var token string

	splitToken := strings.Split(reqToken, "Bearer")
	if len(splitToken) > 1 {
		token = splitToken[1]
	}
	return token, nil
}

// func GetAuthFromContext(ctx context.Context)
